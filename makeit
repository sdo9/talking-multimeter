#!/bin/bash
# Cheet sheet of how to build with ano.

# pip install ano
# apt-get install arduino-core picocom espeak python-serial

set -e
set -x

# Work in a build/ directory, touch nothing outside of here.
mkdir build
cd build

# Get TinyFlash driver lib.
git clone https://github.com/adafruit/Adafruit_TinyFlash
patch -p0 <../patches/tiny-flash.diff

# Speech generation utility and flash uploader:
mkdir words-flash-writer
pushd words-flash-writer
ano init
cp -a ../../words-flash-writer/* .
mv -f flash-writer-arduino-sketch/* src/
rmdir flash-writer-arduino-sketch
cp -a ../Adafruit_TinyFlash lib/
ano build -m pro --cpu 8MHzatmega328
./make.py
popd

# Main DMM talking module:
mkdir dmm-talking-arduino-sketch
pushd dmm-talking-arduino-sketch
ano init
cp -f ../../dmm-talking-arduino-sketch/* src/
cp ../words-flash-writer/words_def.h src/
cp -a ../Adafruit_TinyFlash lib/
# Get SoftwareSerial.cpp from arduino development tools.
# It's either directly there or under src/.
F="$(find /usr/share/arduino/hardware/arduino/avr/libraries/SoftwareSerial -name SoftwareSerial.cpp -print)"
cp "$F" src/
patch -p0 <../../patches/SoftwareSerial.diff
ano build -m pro --cpu 8MHzatmega328
popd
echo OK

# Upload a sketch with ano upload -m pro --cpu 8MHzatmega328
# Watch serial output with ano serial -b 115200

# To modify the word list, add to "list", run make.py. Copy words_def.h
# to dmm-talking-arduino-sketch/src/.
# To program the words sound data onto the flash, upload the
# words-flash-writer sketch and run sender.py to transmit snd.data.
